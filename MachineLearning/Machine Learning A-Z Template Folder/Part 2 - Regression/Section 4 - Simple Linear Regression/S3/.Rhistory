setwd("~/Dev/MachineLearning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/S2/A2")
#Data Preprocessing
#Importing the dataset
dataser = read.csv('Data.csv')
View(dataser)
View(dataser)
View(dataser)
#Importing the dataset
dataset = read.csv('Data.csv')
#Taking Cara of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataser)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1))
install.packages('caTools')
#install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
training_set = scale(training_set)
test_set = scale(test_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
View(test_set)
View(training_set)
setwd("~/Dev/MachineLearning/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression/S3")
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
regressor =  lm(formula = Salary ~ YearsExperience,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
install.packages('ggplot2')
library(ggplot2)
ggplot()+
geom_point(aes(x= training_set.$YearsExperiene, y=training_set$Salary),
color = 'red')+
geom_line(aex(x=raining_set.$YearsExperiene, y = predict(regressor, newdata = traning_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Traning set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot()+
geom_point(aes(x= training_set.$YearsExperiene, y=training_set$Salary),
color = 'red')+
geom_line(aes(x=raining_set.$YearsExperiene, y = predict(regressor, newdata = traning_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Traning set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot()+
geom_point(aes(x= training_set.$YearsExperiene, y=training_set$Salary),
color = 'red')+
geom_line(aes(x=training_set.$YearsExperiene, y = predict(regressor, newdata = traning_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Traning set)') +
xlab('Years of Experience') +
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x= training_set$YearsExperiene, y=training_set$Salary),
color = 'red')+
geom_line(aes(x=training_set$YearsExperiene, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Traning set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot()+
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Traning set)') +
xlab('Years of Experience') +
ylab('Salary')
library(ggplot2)
ggplot()+
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of Experience') +
ylab('Salary')
